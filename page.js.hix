[<][[table]]import injectTapEventPlugin from 'react-tap-event-plugin';
import React, { Component, PropTypes } from 'react';
import { Toggle, RaisedButton, TextField,  Divider } from 'material-ui/lib/';
import DatePicker from 'material-ui/lib/date-picker/date-picker';
import dateTimeFormat from '../util/DateTimeFormat';
import Dropzone from 'react-dropzone';

injectTapEventPlugin();
const [[table.name]] = React.createClass({
	render: function() {
	    return (		
		  <div>
		  	<div className="container">
		      <h2>Nuevo [[table.name]]</h2>
			  </div>
		      <Divider />
		      <div className="container"><br />

		[[column int]]
				<div className='form-group'>
		        	<TextField id='[[column.name]]' type='number' 
		        			floatingLabelText='[[column.name]]'
							value={this.props.[[column.name]]}
							onChange={this.props.onUpdate[[column.name]]}
					/>
		        </div>
		[[/column int]]
		[[column nvarchar]]
				<div className='form-group'>
		        	<TextField id='[[column.name]]' type='text' 
		        			floatingLabelText='[[column.name]]'
							value={this.props.[[column.name]]}
							onChange={this.props.onUpdate[[column.name]]}
					/>
		        </div>
		[[/column nvarchar]]
		[[column varchar]]
				<div className='form-group'>
		        	<TextField id='[[column.name]]' type='text' 
		        			floatingLabelText='[[column.name]]'
							value={this.props.[[column.name]]}
							onChange={this.props.onUpdate[[column.name]]}
					/>
		        </div>
		[[/column varchar]]
		[[column bit]]
		        <Toggle label='[[column.name]]' 
				        onToggle={this.props.onUpdate[[column.name]]} 
				        toggled={this.props.[[column.name]]}
				        labelPosition='right'
				/>	
		[[/column bit]]
		[[column datetime]]
				<DatePicker
					floatingLabelText="[[column.name]]"
					autoOk={true}
					container="inline" mode="landscape"
					DateTimeFormat={dateTimeFormat()}
					value={this.props.[[column.name]]}
					onChange={this.props.opUpdate[[column.name]]}
					okLabel= 'OK' cancelLabel='Cancelar'
					firstDayOfWeek={1}
					locale="es"
				/>
		[[/column datetime]]
		[[column real]]
		        <div className='form-group'>
		        	<TextField id='[[column.name]]' type='number' 
		        			floatingLabelText='[[column.name]]'
							value={this.props.[[column.name]]}
							onChange={this.props.onUpdate[[column.name]]}
					/>
		        </div>	
		[[/column real]]
		[[column varbinary]]
				<Dropzone onDrop={this.onUpload[[column.name]]} >
	              <div>Subir [[column.name]].</div>
	            </Dropzone>
		[[/column varbinary]]
    <br /><br />
			  <RaisedButton primary={true} onClick={this.onSave[[table.name]]} style={{marginBottom:15, color: 'white'}}>Guardar</RaisedButton>
			  </div>
		    </div>
		)
	}
});

[[table.name]].propTypes = {  
  onSave[[table.name]]: PropTypes.func.isRequired,
  [[column int]][[column.name]]: PropTypes.number.isRequired,
  onUpdate[[column.name]]: PropTypes.func.isRequired,
[[/column int]][[column nvarchar]]  [[column.name]]: PropTypes.string.isRequired,
  onUpdate[[column.name]]: PropTypes.func.isRequired,
[[/column nvarchar]][[column varchar]]  [[column.name]]: PropTypes.string.isRequired,
  onUpdate[[column.name]]: PropTypes.func.isRequired,
[[/column varchar]][[column bit]]  [[column.name]]: PropTypes.bool.isRequired,
  onUpdate[[column.name]]: PropTypes.func.isRequired,
[[/column bit]][[column real]]  [[column.name]]: PropTypes.number.isRequired,
  onUpdate[[column.name]]: PropTypes.func.isRequired,
[[/column real]][[column varbinary]]  [[column.name]]: PropTypes.string.isRequired,
  onUpdate[[column.name]]: PropTypes.func.isRequired,
[[/column varbinary]]
}

module.exports = [[table.name]];
[[/table]][>]